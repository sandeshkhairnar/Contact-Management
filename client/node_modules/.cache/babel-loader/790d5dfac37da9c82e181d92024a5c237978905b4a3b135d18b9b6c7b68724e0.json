{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects_2024\\\\contact-management\\\\client\\\\src\\\\components\\\\ContactTable.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, TablePagination, TableSortLabel } from '@mui/material';\nimport { Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactTable = ({\n  contacts,\n  totalPages,\n  page,\n  rowsPerPage,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  handleSort,\n  sortBy,\n  order,\n  onEdit,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [['firstName', 'lastName', 'email', 'phoneNumber', 'company', 'jobTitle'].map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortBy === column,\n                direction: sortBy === column ? order : 'asc',\n                onClick: () => handleSort(column),\n                children: column.charAt(0).toUpperCase() + column.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)\n            }, column, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: contact.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: contact.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: contact.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: contact.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: contact.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: contact.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => onEdit(contact),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => onDelete(contact._id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: totalPages * rowsPerPage,\n      page: page - 1,\n      onPageChange: (e, newPage) => handleChangePage(newPage + 1),\n      rowsPerPage: rowsPerPage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactTable;\nContactTable.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    email: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    company: PropTypes.string,\n    jobTitle: PropTypes.string\n  })).isRequired,\n  totalPages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\nexport default ContactTable;\nvar _c;\n$RefreshReg$(_c, \"ContactTable\");","map":{"version":3,"names":["React","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","TablePagination","TableSortLabel","Edit","EditIcon","Delete","DeleteIcon","jsxDEV","_jsxDEV","ContactTable","contacts","totalPages","page","rowsPerPage","handleChangePage","handleChangeRowsPerPage","handleSort","sortBy","order","onEdit","onDelete","children","map","column","active","direction","onClick","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","contact","firstName","lastName","email","phoneNumber","company","jobTitle","_id","component","count","onPageChange","e","newPage","onRowsPerPageChange","_c","propTypes","arrayOf","shape","string","isRequired","number","func","oneOf","$RefreshReg$"],"sources":["D:/Projects_2024/contact-management/client/src/components/ContactTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  TableSortLabel,\r\n} from '@mui/material';\r\nimport { Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\n\r\nconst ContactTable = ({\r\n  contacts,\r\n  totalPages,\r\n  page,\r\n  rowsPerPage,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  handleSort,\r\n  sortBy,\r\n  order,\r\n  onEdit,\r\n  onDelete\r\n}) => {\r\n  return (\r\n    <Paper>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {['firstName', 'lastName', 'email', 'phoneNumber', 'company', 'jobTitle'].map((column) => (\r\n                <TableCell key={column}>\r\n                  <TableSortLabel\r\n                    active={sortBy === column}\r\n                    direction={sortBy === column ? order : 'asc'}\r\n                    onClick={() => handleSort(column)}\r\n                  >\r\n                    {column.charAt(0).toUpperCase() + column.slice(1)}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {contacts.map((contact) => (\r\n              <TableRow key={contact._id}>\r\n                <TableCell>{contact.firstName}</TableCell>\r\n                <TableCell>{contact.lastName}</TableCell>\r\n                <TableCell>{contact.email}</TableCell>\r\n                <TableCell>{contact.phoneNumber}</TableCell>\r\n                <TableCell>{contact.company}</TableCell>\r\n                <TableCell>{contact.jobTitle}</TableCell>\r\n                <TableCell>\r\n                  <IconButton onClick={() => onEdit(contact)}>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                  <IconButton onClick={() => onDelete(contact._id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={totalPages * rowsPerPage}\r\n        page={page - 1}\r\n        onPageChange={(e, newPage) => handleChangePage(newPage + 1)}\r\n        rowsPerPage={rowsPerPage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nContactTable.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      email: PropTypes.string,\r\n      phoneNumber: PropTypes.string,\r\n      company: PropTypes.string,\r\n      jobTitle: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  totalPages: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n  sortBy: PropTypes.string.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}